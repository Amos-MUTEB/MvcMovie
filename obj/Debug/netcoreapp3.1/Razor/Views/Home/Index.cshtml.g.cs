#pragma checksum "C:\Users\amosm\source\repos\MvcMovie\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "77fb7fa2f64e11e2352bda10d9f2fc546e379a26"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\amosm\source\repos\MvcMovie\Views\_ViewImports.cshtml"
using MvcMovie;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\amosm\source\repos\MvcMovie\Views\_ViewImports.cshtml"
using MvcMovie.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"77fb7fa2f64e11e2352bda10d9f2fc546e379a26", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"686ad2e38abb871af45be971520cc6c3156da389", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\amosm\source\repos\MvcMovie\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Accueil";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""text-center"">
        <h1 class=""display-4"">ILUNGA KILUMBU A MUTEB Amos</h1>
        <p>Lien github : <a href=""https://github.com/Amos-MUTEB/MvcMovie"">TP .NET BikeWatcher- URL code source </a>.</p>
    </div>
<div>
    <ul>
        <li class=""nav-item"">
            <div> <s>
    1 Avoir une application ASP.Net Core de base nomm√©e ""BikeWatcher"" qui tourne sur sa machine
    D√©marrer un site avec asp dotnet core :
        </s>
                
            </div>
        </li>
        <li class=""nav-item"">
            <div> <s>
    2 Cr√©er un repository public sur github, bitbucket ou gitlab pour h√©berger votre code.
    gitignore de base pour .NET Core :
</s>
            </div>
        </li>
        <li class=""nav-item"">
            <div><s>Publier votre code sur le repository √† chaque avanc√©e</s></div>
        </li>
        <li class=""nav-item"">
            <div><s>4 Supprimer du menu les pages de bases pour 2 liens de menu fonctionnels vers les pages vides suivantes ");
            WriteLiteral(@": ""Accueil"", ""Liste des stations"", ""Carte"", ""Mes favoris""</s></div>
        </li>
        <li class=""nav-item"">
            <div><s>5 Compl√©ter la pages ""Accueil"" pour pr√©senter votre travail, votre nom/prenom, cette liste d'objectifs (que vous rayerez au fur et √† mesure) et l'URL o√π votre code source est visible</s></div>
        </li>
        <li class=""nav-item"">
            <div><s>
    6 Se brancher sur l'API VeloV du grand Lyon pour r√©cup√©rer les donn√©es en temps r√©el
    API OpenData du Grand Lyon :
    API de secours üôÇ
    Lire des donn√©es issues d'un flux JSON :
</s></div>
        </li>
        <li class=""nav-item"">
            <div><s>
    7 Afficher les donn√©es de l'API sous forme de tableau sur la page ""Liste des stations"" (les stations sont tri√©es par ordre alphab√©tique)
    Razor Cheat sheet
</s></div>
        </li>
        <li class=""nav-item"">
            <div><s>
    8 Afficher les donn√©es de l'API sous forme de carte sur la page ""Carte"" (chaque station sera repr√©sent√©e ");
            WriteLiteral(@"par une √©pingle √† son emplacement)
    Int√©grer une carte openstreet map sur un site :
</s></div>
        </li>
        <li class=""nav-item"">
            <div> <s>9 Ajouter sur caque √©pingle de la carte la possibilit√© de cliquer pour afficher une infobulle qui indiquera le nombre de v√©los et de places √† la station en question</s></div>
        </li>
        <li class=""nav-item"">
            <div>
                10 Ajouter la possibilit√© de cr√©er un compte utilisateur sur votre application
            </div>
        </li>
        <li class=""nav-item"">
            <div>11 Ajouter sur la page ""Liste des stations"" et/ou ""Carte"" la possibilit√© de rajouter des stations en favoris</div>
        </li>
        <li class=""nav-item"">
            <div>12 Compl√©ter la page ""Mes favoris"" pour n'afficher sous forme de tableau que les stations marqu√©es en favoris</div>
        </li>
        <li class=""nav-item"">
            <div>
                13 Stocker les stations favorites dans une base SQL
      ");
            WriteLiteral(@"          Prise en main d'EF Core dans une application web MVC
            </div>
        </li>
        <li class=""nav-item"">
            <div>
                14 Centrer automatiquement la carte par rapport √† la position de l'utilisateur
                R√©cup√©rer la position de l'utilisateur :
            </div>
        </li>
        <li class=""nav-item"">
            <div>15 Trier automatiquement la liste des stations par rapport √† la position de l'utilisateur</div>
        </li>
        <li class=""nav-item"">
            <div>16 Rendre votre application bilingue Fran√ßais / Anglais</div>
        </li>
        <li class=""nav-item"">
            <div>
                17 Rendre votre application utilisable √† la fois pour la ville de Lyon et la ville de Bordeaux (par exemple un bouton permettra de passer de l'un √† l'autre dans le menu)
                Une API affichant les donn√©es pour la ville de Bordeaux :
            </div>
        </li>
        <li class=""nav-item"">
            <div>
   ");
            WriteLiteral(@"             18 D√©ployer votre code sur un serveur accessible publiquement en consultation
                D√©ployer une application ASP.Net Core sur un serveur Debian :
                D√©ployer une application ASP.Net Core sur Azure :
            </div>
        </li>
        <li class=""nav-item"">
            <div>19 Permettre aux utilisateurs de signaler un v√©lo en panne</div>
        </li>
        <li class=""nav-item"">
            <div>20 Faire en sorte que votre site soit agr√©able √† utiliser sur mobile (il ne doit pas comporter ascenseur horizontal)</div>
        </li>
        <li class=""nav-item"">
            <div>21 BONUS : toute fonctionnalit√© suppl√©mentaire sera valoris√©e, pensez-juste √† l'indiquer sur votre page d'accueil que je puisse la comptabiliser</div>
        </li>
    </ul>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
